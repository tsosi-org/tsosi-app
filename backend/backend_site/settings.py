"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

from .settings_local import (
    ALLOWED_HOSTS,
    DATABASES,
    DEBUG,
    DJANGO_LOG_LEVEL,
    MEDIA_ROOT,
    MEDIA_URL,
    SECRET_KEY,
    TSOSI_CELERY_BROKER_URL,
    TSOSI_DATA_LOG_FILE,
    TSOSI_DJANGO_LOG_FILE,
    TSOSI_MAIN_LOG_FILE,
    TSOSI_REDIS_DB,
    TSOSI_REDIS_HOST,
    TSOSI_REDIS_PORT,
)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/


CORS_ALLOWED_ORIGINS = [
    "http://127.0.0.1:5173",
    "http://localhost:5173",
]

# Application definition

INSTALLED_APPS = [
    # 'django.contrib.admin',
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "corsheaders",
    # 'django.contrib.messages',
    "django.contrib.staticfiles",
    "rest_framework",
    "django_filters",
    "tsosi",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    # 'django.middleware.security.SecurityMiddleware',
    # 'django.contrib.sessions.middleware.SessionMiddleware',
    "django.middleware.common.CommonMiddleware",
    # 'django.middleware.csrf.CsrfViewMiddleware',
    # 'django.contrib.auth.middleware.AuthenticationMiddleware',
    # 'django.contrib.messages.middleware.MessageMiddleware',
    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = "backend_site.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "backend_site.wsgi.application"

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "filters": {
        "require_debug_false": {
            "()": "django.utils.log.RequireDebugFalse",
        },
        "require_debug_true": {
            "()": "django.utils.log.RequireDebugTrue",
        },
    },
    "handlers": {
        "console": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "simple",
        },
        "tsosi_file": {
            "level": "DEBUG",
            "class": "logging.handlers.TimedRotatingFileHandler",
            "filename": TSOSI_MAIN_LOG_FILE,
            "when": "midnight",
            "interval": 1,
            "backupCount": 10,
            "formatter": "default",
        },
        "tsosi_data_file": {
            "level": "DEBUG",
            "class": "logging.handlers.TimedRotatingFileHandler",
            "filename": TSOSI_DATA_LOG_FILE,
            "when": "midnight",
            "interval": 1,
            "backupCount": 10,
            "formatter": "default",
        },
        "django_file": {
            "level": "DEBUG",
            "class": "logging.handlers.TimedRotatingFileHandler",
            "filename": TSOSI_DJANGO_LOG_FILE,
            "filters": ["require_debug_false"],
            "when": "midnight",
            "interval": 1,
            "backupCount": 10,
            "formatter": "default",
        },
    },
    "formatters": {
        "default": {
            "format": "[{asctime}] {levelname} {pathname} - {message}",
            "style": "{",
        },
        "simple": {"format": "{levelname} {module} - {message}", "style": "{"},
    },
    "loggers": {
        "django": {
            "handlers": ["console", "django_file"],
            "propagate": True,
            "level": DJANGO_LOG_LEVEL,
        },
        "tsosi": {
            "handlers": ["console", "tsosi_file"],
            "level": "DEBUG",
            "propagate": True,
        },
        "tsosi.data": {
            "handlers": ["console", "tsosi_data_file"],
            "level": "DEBUG",
            "propagate": False,
        },
        # The celery tasks are logged in the data file as they correspond
        # to tsosi.data code.
        # TODO: Implement the tasks in the tsosi.data module and import them
        # in tsosi.tasks
        "tsosi.tasks": {
            "handlers": ["console", "tsosi_data_file"],
            "level": "DEBUG",
            "propagate": False,
        },
        "console_only": {
            "handlers": ["console"],
            "level": "DEBUG",
            "propagate": False,
        },
    },
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    # {
    #     "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    # },
    # {
    #     "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    # },
    # {
    #     "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    # },
    # {
    #     "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    # },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

STATIC_ROOT = BASE_DIR / "static"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

REST_FRAMEWORK = {
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 20,
}

API_BYPASS_PAGINATION_ALLOWED_ORIGINS = []


TSOSI_CELERY_ACCEPT_CONTENT = ["json"]
TSOSI_CELERY_TASK_SERIALIZER = "json"
TSOSI_CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True
