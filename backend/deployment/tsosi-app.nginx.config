server {
  include mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;
  access_log /var/log/nginx/tsosi_access.log combined;
  error_log /var/log/nginx/tsosi_error.log warn;

  sendfile on;

  # use 'listen 80 deferred;' for Linux
  # use 'listen 80 accept_filter=httpready;' for FreeBSD
  listen 80;
  client_max_body_size 4G;

  # set the correct host(s) for your site
  server_name tsosi.u-ga.fr www.tsosi.u-ga.fr;

  keepalive_timeout 5;

  # path for static files
  root /var/www/current/public;

  # The base route that serves front-end files.
  location / {
    root /var/www/current/public;
    try_files $uri $uri/ /index.html;
  }

  # Django static route
  location /static/ {
    alias /var/www/current/backend/static/;
  }

  # Django media route
  location /media/ {
    alias /tsosi_media/;
  }

  # The Django application
  location /api/ {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;
    # Forward traffic to the dedicated socket.
    proxy_pass http://unix:/run/tsosi_gunicorn.sock;
  }
}