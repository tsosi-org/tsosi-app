# Port 80 -
# redirect all traffic to tsosi.org 443
server {
  listen 80;
  server_name _;
  return 301 https://tsosi.org$request_uri;
}

# Port 443 redirect -
# Default server redirecting all https traffic to tsosi.org.
# We register the tsosi.org SSL certificate but it
# should not be used.
# This could break when automatically renewing the
# certificates with certbot.
server {
  listen 443 ssl default_server;
  server_name _;

  ssl_certificate /etc/letsencrypt/live/tsosi.org/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/tsosi.org/privkey.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
  
  return 301 https://tsosi.org$request_uri;
}

# Port 443
server {
  # The below certificates only enables tsosi.org
  server_name tsosi.org;
  if ($host != tsosi.org) {
    return 444;
  }

  include mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;
  access_log /var/log/nginx/access.log combined;
  error_log /var/log/nginx/error.log warn;

  sendfile on;
  
  listen 443 ssl; # managed by Certbot
  ssl_certificate /etc/letsencrypt/live/tsosi.org/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/tsosi.org/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

  client_max_body_size 4G;

  keepalive_timeout 5;

  # Enable gzip compression to save file size
  gzip on;
  gzip_disable "msie6";
  gzip_vary on;
  gzip_proxied any;
  gzip_min_length 1000;
  gzip_comp_level 6;
  # gzip_buffers 16 8k;
  # gzip_http_version 1.1;
  gzip_types text/plain text/css application/json application/javascript text/javascript;

  
  # path for static files
  root /var/www/current/public;

  location / {
    root /var/www/current/public;
    try_files $uri $uri/ /index.html;
  }
    
  location /static/ {
    alias /var/www/current/backend/static/;
  }
  
  location /media/ {
    alias /tsosi_media/;
  }

  location /api/ {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;
    proxy_pass http://unix:/run/tsosi_gunicorn.sock;
  }
}
